from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait as wait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.proxy import Proxy, ProxyType
import time
import pyperclip
import requests
import bs4


proxyDict = { 
              "http"  : '', 
              "https" : '',  
              "ftp"   : ''
            }

def fun_get_proxy_list():
    proxy_list = []
    res = requests.get('https://free-proxy-list.net/')
    elems = bs4.BeautifulSoup(res.text,'html.parser').select('tbody > tr')
    for i in range(300):
        tmp = elems[i].select('td')
        proxy_list.append(((str(tmp[0])+':'+str(tmp[1])).replace('<td>','')).replace('</td>',''))
    return proxy_list


image = 'https://www.instagram.com/p/B2RX08jIFCi/'
login_url = "https://www.instagram.com/accounts/login/?source=auth_switcher"


def fun_browser(PROXY):
    chrome_options = webdriver.ChromeOptions()
    chrome_options.add_argument('--proxy-server=http://%s' % PROXY)
    browser = webdriver.Chrome(options=chrome_options)
    return browser


def fun_check_browser(browser):
    try:
        browser.get("https://www.instagram.com/accounts/login/?source=auth_switcher")
        element = wait(browser, 10).until(EC.presence_of_element_located((By.ID, 'fb-root')))
        print('Welcome to instagram')
        return False
    except:
        print('Prox not working for instagram: ')
        browser.quit()
        return True


def fun_browser_login(proxy_list,proxy_numb):
    condition = True
    while condition:
        if proxy_numb<=len(proxy_list):
            browser = fun_browser(proxy_list[proxy_numb])
            condition = fun_check_browser(browser)
        else:
            proxy_list = fun_get_proxy_list()
            proxy_numb = 0
    return browser, proxy_numb, proxy_list



def fun_loginas(browser,row):
    global login_url 
    browser.get(login_url)
    print('Bandoma pasiekti: ',row[2],' ',row[3])
    if browser.current_url!=login_url:
        browser.get(login_url)
    try:
        element = wait(browser, 15).until(EC.visibility_of_element_located((By.TAG_NAME, 'input')))
        print('Main login page loaded..')
    except:
        ('Main page not loaded... ', uID, ' will be skipped')
        return False
    inputs = browser.find_elements_by_tag_name('input')
    for i in inputs:
        fun_clean_input(i)
    inputs[0].send_keys(row[0])
    inputs[1].send_keys(row[1])
    login_condition = True
    while login_condition:
        inputs = browser.find_elements_by_tag_name('button')
        for i in range(len(inputs)):
            if inputs[i].text=="Log In":
                print('clik ', i)
            if wait(browser, 15).until(EC.url_changes('https://www.instagram.com/')):
                login_condition = False
            else:
                tmp = input('Failed to login just enter correct credentials. Write y here and hit enter when done: ')
    return True


def fun_do_work(browser,row):
    global login_url 
    browser.get(login_url)
    print('Bandoma pasiekti: ',row[2],' ',row[3])
    if browser.current_url!=login_url:
        browser.get(login_url)



def fun_read_data():
    condition = True
    while condition:
        chat = input('Select accounts and jobs from Excel and hit Enter')
        if '\r\n' in pyperclip.paste():
             rows = pyperclip.paste().split('\r\n')[:-1]
             for i in range(len(rows)):
                 rows[i]=rows[i].split('\t')
             condition=False
    print('Done')
    return rows


def fun_clean_input(element):
    element.click()
    element.send_keys(Keys.END)
    element.send_keys(Keys.CONTROL, 'a')
    element.send_keys(Keys.DELETE)


def main_worker(proxy_list):
    previous_acc = 'old'
    proxy_numb = 0
    rows=fun_read_data()
    rows_hostory = []
    print('Working with ',len(rows),' Instagram acc total')
    for row in rows:
        if (len(row[0])>4) and ('@' in row[0]) and ('.' in row[0]):
            print('User: ',row[0])
            if previous_acc!=row[0]:
                try:
                    browser.quit()
                except:
                    print('Opening new browser')
                browser, proxy_numb, proxy_list = fun_browser_login(proxy_list,proxy_numb)
                proxy_numb = proxy_numb+1
                fun_loginas(browser,row)
            else:
                print('Working with same browser as previous')
            fun_do_work(browser,row)   
        else:
            print('Invalid user',row)
    #browser.quit()


proxy_list=fun_get_proxy_list()
if len(proxy_list)>10:
    main_worker(proxy_list)
else:
    print('Check internet and try again')



